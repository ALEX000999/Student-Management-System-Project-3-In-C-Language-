START

Define struct Student:
    name: string
    ID: integer
    department: string
    age: integer
    gender: character
    cgpa: float
    mobileNumber: string

Define array students of size 10000 of struct Student
Initialize numOfStudents to 0

Function addStudent():
    Create newStudent of type Student
    Prompt user to input student details:
        - name
        - ID
        - department
        - age
        - gender
        - cgpa
        - mobileNumber
    Store input into newStudent
    Add newStudent to students array at index numOfStudents
    Increment numOfStudents by 1
    Print "Student added successfully"

Function searchStudent():
    Prompt user to input student ID to search
    Iterate over students array:
        If student ID matches input:
            Print student details
            Return
    Print "Student not found"

Function updateStudent():
    Prompt user to input student ID to update
    Iterate over students array:
        If student ID matches input:
            Prompt user to input new CGPA
            Update student's CGPA with input
            Prompt user to input new mobile number
            Update student's mobile number with input
            Print "Student information updated successfully"
            Return
    Print "Student not found"

Function deleteStudent():
    Prompt user to input student ID to delete
    Iterate over students array:
        If student ID matches input:
            Shift elements to left to remove student
            Decrement numOfStudents by 1
            Print "Student deleted successfully"
            Return
    Print "Student not found"

Function displayStudentsBySpecificDepartment(department):
    Print "List of students in" department "department:"
    Iterate over students array:
        If student's department matches input department:
            Print student details
            Set found to true
    If found is false:
        Print "No students found in" department "department."

Function displayStudents():
    Prompt user to input department
    Call displayStudentsBySpecificDepartment with input department

Main function:
    Define choice as integer
    Do:
        Print "Student Management System menu:"
        Print options
        Prompt user to input choice
        Switch on choice:
            Case 1:
                Call addStudent()
                Break
            Case 2:
                Call searchStudent()
                Break
            Case 3:
                Call updateStudent()
                Break
            Case 4:
                Call deleteStudent()
                Break
            Case 5:
                Call displayStudents()
                Break
            Case 6:
                Print "Exiting..."
                Break
            Default:
                Print "Invalid choice. Please try again."
    While choice is not 6

End of program
